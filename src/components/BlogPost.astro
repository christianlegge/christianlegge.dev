---
import type { CollectionEntry } from "astro:content";
import Tag from "./Tag.astro";

export interface Props {
	post: CollectionEntry<"blog">;
}

const { post } = Astro.props;
const { Content } = await post.render();
---

<article class="tailwind-global blog-post">
	<h1>
		<a
			href={`/blog/${post.slug}`}
			class="link"
			style={{ textDecorationLine: "none" }}>{post.data.title}</a
		>
	</h1>
	<p class="text-sm opacity-75">
		{new Date(post.slug).toDateString()}
	</p>
	<Content />
	<ul class="mt-4 flex flex-wrap gap-1">
		{
			post.data.tags &&
				post.data.tags.map((tag) => (
					<li style={{ listStyleType: "none" }}>
						<Tag>{tag}</Tag>
					</li>
				))
		}
	</ul>
</article>
<script>
	const post = document.getElementsByClassName("blog-post");
	if (post[0] && post[0].children) {
		console.log(post[0].children);
		const textPs = Array.from(post[0].children).filter(
			(el) => (el as HTMLElement).innerText !== "" && el.tagName === "P"
		);
		if (
			textPs.length >= 2 &&
			textPs.filter((el) => el.classList.contains("large-first-letter"))
				.length === 0
		) {
			textPs[1].classList.toggle("large-first-letter");
		}
	}
</script>
